# ArgoCD Configuration

config:
  names:
    base: 'gov-demo'
  bootstrap:
    argocdNamespace: openshift-gitops
    valueFile: values.yaml
    serviceaccounts: 
    #- argocd-argocd-application-controller
    - openshift-gitops-argocd-application-controller
    - demo-quarkus-app-argocd-application-controller
  argocdNamespace: demo-quarkus-cicd
  # ApplicationSet: consider to enable it in ArgoCD "applicationset: {}"
  appset:
    enabled: true
  tekton:
    enabled: true
  dex:
    enabled: true
  projects: 
    - name: demo-quarkus-app
      # Indicate if project is active and resources should be created and managed or not
      enabled: true
      openShift:
        # Create groups in OpenShift, which could be used for ArgoCD RBAC
        # default is false
        group2argo: true
      # Namespace of the project specific ArgoCD resources (ArgoCD, ArgoCD Project)
      # used also as managed-by reference
      managedNamespace: demo-quarkus-cicd
      # Relevant namespaces
      # - will be created if true
      # - used as ArgoCD Project destination limitation
      # - used for Tekton EventListener/Trigger and Webhook config. 
      #   Only relevant for the namespaces, which need a direct Webhook trigger
      #   Default: no Webhook configuration enabled
      namespaces:
      - namespace: demo-quarkus-cicd
        create: true
      - namespace: demo-quarkus-test
        create: true
        tekton:
          enabled: true
          gitEvent: push
          gitRef: 'tags'
          helmValueFile: 'helm/values.test.yaml'
          remoteCRNamespace: 'demo-name-test'
          remoteCRPushEnabled: true
      - namespace: demo-quarkus-dev
        create: true
        tekton:
          enabled: true
          gitEvent: push
          gitRef: 'heads'
          helmValueFile: 'helm/values.dev.yaml'
          remoteCRNamespace: 'demo-name-dev'
          remoteCRPushEnabled: false
      - namespace: demo-quarkus-prod
        create: true
      git: 
        # The App source code repository
        # like source code and every needed to build and package the app
        # Usually managed bei App Team
        code: 
          repo: https://github.com/haf-tech/quarkus-playground.git
          branch: main
          path: ''
          fullName: 'haf-tech/quarkus-playground'
        # The App configuration, holding project deployment manifest resources, 
        # like Helm/kustomize definition
        # Usually managed bei App Team
        config: 
          # Attention: Use git/ssh URL. Use also for promotion and git push with ssh key
          repo: git@github.com:haf-tech/quarkus-playground-config.git
          branch: test-promotion
          path: 'argocd'
          # Relevant if ApplicationSet is NOT enabled
          # DEPRECATED!
          helmValueFile: values.yaml
          # Relevant if ApplicationSet is enabled
          # JSON holding the configuration to create the deployment ArgoCD Application
          # main attributes are repo holding the deployment manifest files, stage to dir/branch relation, target namespace
          # Usually managed by the App Dev Team itself
          configJson: config4.json
        # The Tekton configuration, holding project specific resources, 
        # like Pipeline and TriggerTemplate definition
        # Usually managed centrally / Platform Team
        tekton:
          repo: https://github.com/ocp-universe/gitops-governance.git
          branch: stage-b
          path: 'tekton/project-default'
    - name: demo-app2
      # Indicate if project is active and resources should be created and managed or not
      enabled: false
      openShift:
        # Create groups in OpenShift, which could be used for ArgoCD RBAC
        # default is false
        group2argo: false
      # Namespace of the project specific ArgoCD resources (ArgoCD, ArgoCD Project)
      # used also as managed-by reference
      managedNamespace: demo-app2-cicd
      # Relevant namespaces
      # - will be created if true
      # - used as ArgoCD Project destination limitation
      namespaces:
      - namespace: demo-app2-cicd
        create: true
      - namespace: demo-app2-test
        create: true
        tekton:
          enabled: true
          gitEvent: push
          helmValueFile: 'helm/values.dev.yaml'
      git: 
        # The App source code repository
        # like source code and every needed to build and package the app
        # Usually managed bei App Team
        code: 
          repo: https://github.com/haf-tech/quarkus-playground.git
          branch: main
          path: ''
          fullName: 'haf-tech/quarkus-playground'
        # The App configuration, holding project deployment manifest resources, 
        # like Helm/kustomize definition
        # Usually managed bei App Team
        config: 
          repo: https://github.com/haf-tech/quarkus-playground-config.git
          branch: test-promotion
          path: 'argocd'
          # Relevant if ApplicationSet is NOT enabled
          # DEPRECATED!
          helmValueFile: values.yaml
          # Relevant if ApplicationSet is enabled
          # JSON holding the configuration to create the deployment ArgoCD Application
          # main attributes are repo holding the deployment manifest files, stage to dir/branch relation, target namespace
          # Usually managed by the App Dev Team itself
          configJson: config2.json
        # The Tekton configuration, holding project specific resources, 
        # like Pipeline and TriggerTemplate definition
        # Usually managed centrally / Platform Team
        tekton:
          repo: https://github.com/ocp-universe/gitops-governance.git
          branch: stage-b
          path: 'tekton/project-default'
    # Template/Documentation of the possible properties
    - name: name-of-project
      # name is the base for various resources (ArgoCD, ArgoCD Project, App/Appset)

      # Indicate if project is active and resources should be created and managed or not
      enabled: false
      openShift:
        # Create groups in OpenShift, which could be used for ArgoCD RBAC
        # default is false
        group2argo: true
      # Namespace of the project specific ArgoCD resources (ArgoCD, ArgoCD Project)
      # used also as managed-by reference
      managedNamespace: demo-quarkus-cicd
      # Relevant namespaces
      # - will be created if true
      # - used as ArgoCD Project destination limitation
      # - used for Tekton EventListener/Trigger and Webhook config. 
      #   Only relevant for the namespaces, which need a direct Webhook trigger
      namespaces:
      - namespace: demo-quarkus-cicd
        create: true
      - namespace: demo-quarkus-test
        create: true
        tekton:
          enabled: true
          gitEvent: push
          gitRef: 'heads'
          helmValueFile: 'helm/values.test.yaml'
          remoteCRNamespace: 'demo-name-test'
          remoteCRPushEnabled: false
      - namespace: demo-quarkus-dev
        create: true
        # Tekton specific configuration relevant for EventListener/Trigger
        tekton:
          # Enable only if Webhook for this namespace is wanted
          enabled: true
          # GitHub X-Event header, usually only 'push' (also for tags)
          gitEvent: push
          # GitHub Webhook ref: 'refs/tags/xxx' => tags, 'refs/heads/xxx' => heads 
          gitRef: 'tags'
          # Helm Value File relevant for this namespace/stage, 
          # will be also used for version promotion
          helmValueFile: 'helm/values.test.yaml'
          # Remote Container Registry namespace/repository
          remoteCRNamespace: 'demo-name-test'
          # Indicate if Remote Container Registry push is wanted
          remoteCRPushEnabled: true
      - namespace: demo-quarkus-prod
        create: true
      git: 
        # The App source code repository
        # like source code and every needed to build and package the app
        # Usually managed bei App Team
        code: 
          repo: http://github.com/example.git
          branch: main
          path: ''
          fullName: 'org/repo-name'
        # The App configuration, holding project deployment manifest resources, 
        # like Helm/kustomize definition
        # Usually managed bei App Team
        config: 
          # Attention: Use git/ssh URL. Use also for promotion and git push with ssh key
          repo: git@github.com:user-id/example-config.git
          branch: main
          path: 'argocd'
          # Relevant if ApplicationSet is NOT enabled
          # DEPRECATED!
          helmValueFile: values.yaml
          # Relevant if ApplicationSet is enabled
          # JSON holding the configuration to create the deployment ArgoCD Application
          # main attributes are repo holding the deployment manifest files, stage to dir/branch relation, target namespace
          # Usually managed by the App Dev Team itself
          configJson: config.json
        # The Tekton configuration, holding project specific resources, 
        # like Pipeline and TriggerTemplate definition
        # Usually managed centrally / Platform Team
        tekton:
          repo: https://github.com/ocp-universe/gitops-governance.git
          branch: stage-b
          path: 'tekton/cicd/overlays'
   