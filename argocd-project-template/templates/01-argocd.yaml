
# ArgoCD
{{- range .Values.config.projects }}
---
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: {{ .name | quote }}
  namespace: {{ .managedNamespace | quote }} 
  annotations:
    argocd.argoproj.io/sync-wave: "-10"
spec:
  rbac:
    # default readonly allows that everyone (also via OCP oauth) can see all resources
    defaultPolicy: 'role:readonly'
    policy: |
      g, system:cluster-admins, role:admin
    scopes: '[groups]'
  {{- if $.Values.config.dex.enabled }}  
  dex:
    openShiftOAuth: true
    resources:
      limits:
        cpu: 50m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 128Mi
  {{- end }}
  {{- if $.Values.config.appset.enabled }}
  # Enable ApplicationSet support
  applicationSet: {}
  {{- end }}
  server:
    insecure: true
    route:
      enabled: true
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
  ha:
    enabled: false
  tls:
    ca: {}
  # Enable the possibility to reference helm charts in kustomize (helmCharts)
  # feature available since kustomize 4.1.0  
  kustomizeBuildOptions: '--enable-helm'
  # Custom Health check for resources which has no status fields or
  # not in this case as ArgoCD it expects
  resourceCustomizations: |
    operator.external-secrets.io/OperatorConfig:
        health.lua: |
          hs = {}
          hs.status = "Healthy"
          return hs
    extensions/Ingress:
        health.lua: |
          hs = {}
          hs.status = "Healthy"
          return hs
    networking.k8s.io/Ingress:
        health.lua: |
          hs = {}
          hs.status = "Healthy"
          return hs
    PersistentVolumeClaim:
        health.lua: |
          hs = {}
          hs.status = "Healthy"
          return hs
    bitnami.com/SealedSecret:
        health.lua: |
          hs = {}
          hs.status = "Healthy"
          hs.message = "Controller doesn't report resource status"
          return hs
  # Ignore the following Kinds, mostly they are generated but not from ArgoCD
  resourceExclusions: |
    - apiGroups:
      - "tekton.dev"
      kinds:
      - "PipelineRun"
      - "TaskRun"
      clusters:
      - "*"
{{- end }}