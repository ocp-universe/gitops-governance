# EventListener
# App/Repo specific
#
# repo: quarkus-playground
# template: ci-template-maven
# 
# Expects Trigger v0.14.x with adjustments in the format
{{ if .Values.tekton.v14 }}
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  creationTimestamp: null
  name: cicd-event-listener-quarkus-playground
  annotations:
    argocd.argoproj.io/sync-wave: "-20"
spec:
  namespaceSelector: {}
  #podTemplate: {}
  resources: {}
  serviceAccountName: pipeline
  triggers:
  {{- range .Values.project.namespaces -}}
  {{- if (.tekton).enabled }}
  - name: trigger-{{ $.Values.project.name }}-{{ .namespace }}
    template:
      ref: ci-template-maven
    bindings:
    - kind: TriggerBinding
      ref: binding-{{ $.Values.project.name }}-{{ .namespace }}
    - kind: TriggerBinding
      ref: binding-github-attributes
    interceptors:
    # In case to secure the access use a Secret which also need to be configured in GitHub which will be
    # send with every Webhook request
    #- github:
    #    secretRef:
    #      secretKey: webhook-secret-key
    #      secretName: webhook-secret-dev-tekton-101
    - ref:
        kind: ClusterInterceptor
        name: cel
      params:
        # refs/heads/, refs/tags/ both push
        - name: filter
          value: >-
            (header.match('X-GitHub-Event', '{{ .tekton.gitEvent }}') &&
            body.repository.full_name == '{{ $.Values.project.git.code.fullName }}' &&
            body.ref.indexOf('{{ .tekton.gitRef }}') > 0)
        - name: overlays
          value:
            - expression: 'body.ref.split(''/'')[2]'
              key: ref
            - expression: 'body.ref.split(''/'')[2]'
              key: imgTag
            - expression: 'body.repository.name'
              key: repoName
            #- expression: 'string({{ $.Values.project.managedNamespace }})'
            #  key: ns
    {{- end }}
    {{- end }}
status:
  configuration:
    generatedName: ""
{{ end }}