# CI Pipeline for application
# - git clone, in a subdir "src"
# - build with maven
# - sonarqube scan
# - build/package image with buildah
# 
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  creationTimestamp: null
  name: ci-pipeline-general
  annotations:
    argocd.argoproj.io/sync-wave: "-50"
spec:
  params:
  - name: REPO
    type: string
  - name: COMMIT_SHA
    type: string
  - name: TLSVERIFY
    type: string
  - name: BUILD_EXTRA_ARGS
    type: string
  - name: DOCKERFILE
    type: string
  - name: IMAGE
    description: Image url (without tag/version), for a internal CR
    type: string
  - name: IMAGE_VERSION
    description: Image version/tag (default is latest), for a internal CR
    type: string
    default: 'latest'
  - name: IMAGE_REMOTE_CR
    description: Image url (incl. tag/version) for a remote CR
    type: string
  - name: GIT_REF
    type: string
  - name: COMMIT_DATE
    type: string
  - name: COMMIT_AUTHOR
    type: string
  - name: COMMIT_MESSAGE
    type: string
  - name: GIT_REPO
    type: string
  - name: GIT_CONFIG_REPO
    type: string
  - name: GIT_CONFIG_REF
    type: string
  - name: MAVEN_GOALS
    type: array
  - name: SONAR_ENABLED
    type: string
    default: "false"
  - name: DC_ENABLED
    type: string
    default: "true"
  - name: SONAR_PROJECT_KEY
    type: string
  - name: SONAR_TOKEN_SECRET_NAME
    type: string
  - name: IMAGE_SCAN_ENABLED
    type: string
    default: "true"
  - name: REMOTE_CR_PUSH_ENABLED
    type: string
    description: If tag and push to a remote CR is wanted or not
    default: "true"
  - name: VERIFY_CR_VA_ENABLED
    type: string
    description: If verifying va result in remote CR is wanted or not
    default: "true"
  - name: PROMOTE_VERSION_ENABLED
    type: string
    description: If promoting version back to git is wanted
    default: "true"
  tasks:
  # ##################
  # Git clone
  - name: clone-source
    params:
    - name: url
      value: $(params.GIT_REPO)
    - name: revision
      value: $(params.GIT_REF)
    - name: subdirectory
      value: 'src'
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
  # ##################
  # Build app
  - name: build-app
    params:
    - name: GOALS
      value: [$(params.MAVEN_GOALS)]
    runAfter:
    - clone-source
    taskRef:
      kind: ClusterTask
      name: maven-v0-2-1
    workspaces:
    - name: source
      workspace: shared-data
    - name: maven-settings
      workspace: maven-settings
  # ##################
  # Scan app via Dependency-Check
  - name: dc-scan
    params:
    - name: CONTEXT_DIR
      value: 'src'
    - name: CHECK_ENABLED
      value: "true"
    - name: PROJECT_NAME
      value: "quarkus-demo"
    runAfter:
    - build-app
    when:
      - input: "$(params.DC_ENABLED)"
        operator: in
        values: ["true"]
    taskRef:
      kind: ClusterTask
      name: dependency-check
    workspaces:
    - name: source
      workspace: shared-data
    - name: report
      workspace: reports
  # ##################
  # Scan app
  - name: sonarqube-scan
    params:
    - name: SONAR_HOST_URL
      value: http://sonarqube-sonarqube.sonarqube:9000
    - name: SONAR_PROJECT_KEY
      value: $(params.SONAR_PROJECT_KEY)
    - name: SONAR_TOKEN_SECRET_NAME
      value: $(params.SONAR_TOKEN_SECRET_NAME)
    runAfter:
    - dc-scan
    when:
      - input: "$(params.SONAR_ENABLED)"
        operator: in
        values: ["true"]
    taskRef:
      kind: ClusterTask
      name: sonarqube-scanner
    workspaces:
    - name: source
      workspace: shared-data
    - name: sonar-settings
      workspace: sonar-settings
  # ##################
  # Check misconfiguration
  - name: check-config
    params:
    - name: CHECK_FILESYSTEM
      value: "true"
    - name: CHECK_IAC
      value: "true"    
    - name: CONTEXT_DIR
      value: "src"    
    runAfter:
    - build-app
    taskRef:
      kind: ClusterTask
      name: config-checks-trivy
    workspaces:
    - name: source
      workspace: shared-data
  # ##################
  # Build container image
  - name: build-image
    params:
    - name: TLSVERIFY
      value: $(params.TLSVERIFY)
    - name: BUILD_EXTRA_ARGS
      value: --label=io.openshift.build.commit.author='$(params.COMMIT_AUTHOR)' --label=io.openshift.build.commit.date='$(params.COMMIT_DATE)'
        --label=io.openshift.build.commit.id='$(params.COMMIT_SHA)' --label=io.openshift.build.commit.message='$(params.COMMIT_MESSAGE)'
        --label=io.openshift.build.commit.ref='$(params.GIT_REF)'
    - name: DOCKERFILE
      value: $(params.DOCKERFILE)
    - name: IMAGE
      value: $(params.IMAGE)
    - name: IMAGE_VERSION
      value: $(params.IMAGE_VERSION)
    runAfter:
    - check-config
    taskRef:
      kind: ClusterTask
      name: buildah-v0-22-0-privileged
    workspaces:
    - name: source
      workspace: shared-data
  # ##################
  # Trivy
  - name: img-scan-trivy
    params:
    - name: image-url
      value: $(params.IMAGE)
    - name: image-version
      value: $(params.IMAGE_VERSION)
    - name: scan-image
      value: $(params.IMAGE_SCAN_ENABLED)
    runAfter:
    - build-image
    taskRef:
      kind: ClusterTask
      name: img-scan-trivy
  # ##################
  # SBOM
  - name: sbom
    params:
    - name: CONTEXT_DIR
      value: 'src'
    - name: GENERATE_BOM
      value: "true"
    - name: ANALYSE_BOM
      value: "true"
    - name: VALIDATE_BOM
      value: "false"
    - name: EXISTING_BOM
      value: "target/sbom.json"
    runAfter:
    - img-scan-trivy
    taskRef:
      kind: ClusterTask
      name: sbom-cyclonedx
    workspaces:
    - name: source
      workspace: shared-data
  # ##################
  # Tag and Push image to remote CR
  - name: tag-push
    params:
    - name: IMAGE_OLD
      value: $(params.IMAGE)
    - name: IMAGE_OLD_DIGEST
      value: $(tasks.build-image.results.IMAGE_DIGEST)
    - name: IMAGE_NEW
      value: $(params.IMAGE_REMOTE_CR)
    runAfter:
    - sbom
    when:
      - input: "$(params.REMOTE_CR_PUSH_ENABLED)"
        operator: in
        values: ["true"]
    taskRef:
      kind: ClusterTask
      name: buildah-tag-push
  # ##################
  # Verify CR VA results
  - name: verify-va
    params:
    - name: image-url
      value: $(params.IMAGE_REMOTE_CR)
    - name: scan-ibm
      value: $(params.VERIFY_CR_VA_ENABLED)    
    runAfter:
    - tag-push
    when:
      - input: "$(params.VERIFY_CR_VA_ENABLED)"
        operator: in
        values: ["true"]
    taskRef:
      kind: ClusterTask
      name: ibm-img-scan-va
  # ##################
  # Promote version and push back to git
  - name: promote-version
    params:
    - name: GIT_URL
      value: $(params.GIT_CONFIG_REPO)
    - name: GIT_REVISION
      value: $(params.GIT_CONFIG_REF)
    - name: CONTEXT_DIR
      value: 'src_manifest'
    - name: IMAGE_DIGEST
      value: $(tasks.build-image.results.IMAGE_DIGEST)
    - name: FILES
      value: 
      - 'helm/values.dev.yaml'
    - name: EXPRESSION
      value: '.image.digest="$(tasks.build-image.results.IMAGE_DIGEST)"'
    runAfter:
    - verify-va
    - sonarqube-scan
    - img-scan-trivy
    when:
      - input: "$(params.PROMOTE_VERSION_ENABLED)"
        operator: in
        values: ["true", "yes"]
    taskRef:
      kind: ClusterTask
      name: promote-version
    workspaces:
    - name: source
      workspace: temp-workspace
  workspaces:
  - description: This workspace will receive the cloned git repo.
    name: shared-data
  - description: This workspace will hold the Maven Settings (temp dir).
    name: maven-settings
  - description: This workspace will hold the SonarQube Settings (temp dir).
    name: sonar-settings
  - description: This workspace will hold various reports.
    name: reports
  - description: This workspace will used for internal/temp data (not persistent).
    name: temp-workspace
