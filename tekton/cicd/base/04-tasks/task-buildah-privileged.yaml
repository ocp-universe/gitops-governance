# Buildah base version v0.22.0
#
# Enhacement
# - privileged: true. with new default parameter SCC_PRIVILEGED
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/pipelines.minVersion: '0.19'
    tekton.dev/tags: image-build
    argocd.argoproj.io/sync-wave: "-60"
  name: buildah-v0-22-0-privileged
  generation: 1
  labels:
    app.kubernetes.io/version: '0.1'
    operator.tekton.dev/provider-type: redhat
spec:
  description: >-
    Buildah task builds source into a container image and then pushes it to a
    container registry.

    Buildah Task builds source into a container image using Project Atomic's
    Buildah build tool.It uses Buildah's support for building from Dockerfiles,
    using its buildah bud command.This command executes the directives in the
    Dockerfile to assemble a container image, then pushes that image to a
    container registry.
  params:
    - name: IMAGE
      description: Reference of the image buildah will produce.
      type: string
    - name: IMAGE_VERSION
      description: Target image version.
      type: string
      default: 'latest'
    - name: BUILDER_IMAGE
      default: >-
        registry.redhat.io/rhel8/buildah@sha256:6a68ece207bc5fd8db2dd5cc2d0b53136236fb5178eb5b71eebe5d07a3c33d13
      description: The location of the buildah builder image.
      type: string
    - name: STORAGE_DRIVER
      default: vfs
      description: Set buildah storage driver
      type: string
    - name: DOCKERFILE
      default: ./Dockerfile
      description: Path to the Dockerfile to build.
      type: string
    - name: CONTEXT
      default: 'src'
      description: Path to the directory to use as context.
      type: string
    - name: TLSVERIFY
      default: 'true'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      type: string
    - name: FORMAT
      default: oci
      description: 'The format of the built container, oci or docker'
      type: string
    - name: BUILD_EXTRA_ARGS
      default: ''
      description: Extra parameters passed for the build command when building images.
      type: string
    - name: PUSH_EXTRA_ARGS
      default: ''
      description: Extra parameters passed for the push command when pushing images.
      type: string
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
  steps:
    - image: $(params.BUILDER_IMAGE)
      name: build
      resources: {}
      script: |

        imgUrl=$(params.IMAGE):$(params.IMAGE_VERSION)

        buildah --storage-driver=$(params.STORAGE_DRIVER) bud \
          $(params.BUILD_EXTRA_ARGS) --format=$(params.FORMAT) \
          --tls-verify=$(params.TLSVERIFY) --no-cache \
          -f $(params.DOCKERFILE) -t $imgUrl $(params.CONTEXT)
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
      securityContext:
        privileged: true
    - image: $(params.BUILDER_IMAGE)
      name: push
      resources: {}
      script: |
        imgUrl=$(params.IMAGE):$(params.IMAGE_VERSION)

        buildah --storage-driver=$(params.STORAGE_DRIVER) push \
          $(params.PUSH_EXTRA_ARGS) --tls-verify=$(params.TLSVERIFY) \
          --digestfile $(workspaces.source.path)/image-digest $imgUrl \
          docker://$imgUrl
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
      securityContext:
        privileged: true
    - image: $(params.BUILDER_IMAGE)
      name: digest-to-results
      resources: {}
      script: |
        #cat $(workspaces.source.path)/image-digest | tee /tekton/results/IMAGE_DIGEST
        cat $(workspaces.source.path)/image-digest | tee $(results.IMAGE_DIGEST.path)
  volumes:
    - emptyDir: {}
      name: varlibcontainers
  workspaces:
    - name: source
