apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: dotnet-build
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/displayName: dotnet-build
    tekton.dev/categories: Build Tools
    tekton.dev/tags: build-tool
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This Task can be used to run a .NET build.
    Source: https://developers.redhat.com/blog/2020/09/24/set-up-continuous-integration-for-net-core-with-openshift-pipelines#develop_a_pipeline_manually

  workspaces:
    - name: source
      description: The workspace consisting of the .NET project.
  params:
    - name: IMAGE
      description: The .NET base image you want to use.
      type: string
      default: registry.access.redhat.com/ubi8/dotnet-31 # .NET Core SDK
    - name: CONTEXT_DIR
      description: The directory containing the .NET project to build
      type: string
      default: "."
    - name: DOTNET_ARGS
      type: array
      default: ["publish"]
      description: The arguments for the dotnet command
  steps:
    - name: dotnet-build
      image: $(params.IMAGE)
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)
      securityContext:
        runAsUser: 0  # UBI 8 images generally run as non-root
      command:
        - dotnet
      args:
        - $(params.DOTNET_ARGS[*]) # dotnet publish -c Release -r linux-x64 --self-contained false "app.csproj"
